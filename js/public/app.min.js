var app=angular.module("Notes",["restangular","ngRoute"]).config(["$provide","$routeProvider","RestangularProvider","$httpProvider","$windowProvider",function(t,e,n,o,i){"use strict";o.defaults.headers.common.requesttoken=oc_requesttoken,t.value("Constants",{saveInterval:5e3}),e.when("/notes/:noteId",{templateUrl:"note.html",controller:"NoteController",resolve:{note:["$route","$q","is","Restangular",function(t,e,n,o){var i=e.defer(),r=t.current.params.noteId;return n.loading=!0,o.one("notes",r).get().then(function(t){n.loading=!1,i.resolve(t)},function(){n.loading=!1,i.reject()}),i.promise}]}}).otherwise({redirectTo:"/"});var r=i.$get(),s=r.location.href,u=s.split("index.php")[0]+"index.php/apps/notes";n.setBaseUrl(u)}]).run(["$rootScope","$location","NotesModel",function(t,e,n){"use strict";t.$on("$routeChangeError",function(){var t=n.getAll();if(t.length>0){var o=t.sort(function(t,e){return t.modified>e.modified?1:t.modified<e.modified?-1:0}),i=t[o.length-1];e.path("/notes/"+i.id)}else e.path("/")})}]);app.controller("AppController",["$scope","$location","is",function(t,e,n){"use strict";t.is=n,t.init=function(t){0!==t&&e.path("/notes/"+t)}}]),app.controller("NoteController",["$routeParams","$scope","NotesModel","SaveQueue","note",function(e,n,o,i,r){"use strict";o.updateIfExists(r),n.note=o.get(e.noteId),n.isSaving=function(){return i.isSaving()},n.updateTitle=function(){n.note.title=n.note.content.split("\n")[0]||t("notes","New note")},n.save=function(){var t=n.note;i.add(t)}}]),app.controller("NotesController",["$routeParams","$scope","$location","Restangular","NotesModel",function(t,e,n,o,i){"use strict";e.route=t,e.notes=i.getAll();var r=o.all("notes");r.getList().then(function(t){i.addAll(t)}),e.create=function(){r.post().then(function(t){i.add(t),n.path("/notes/"+t.id)})},e["delete"]=function(t){var n=i.get(t);n.remove().then(function(){i.remove(t),e.$emit("$routeChangeError")})}}]),app.directive("notesAutofocus",function(){"use strict";return{restrict:"A",link:function(t,e){e.focus()}}}),app.directive("editor",["$timeout",function(t){"use strict";return{restrict:"A",link:function(e,n){var o=mdEdit(n[0],{change:function(n){t(function(){e.$apply(function(){e.note.content=n,e.updateTitle()})})}});o.setValue(e.note.content)}}}]),app.directive("notesIsSaving",["$window",function(e){"use strict";return{restrict:"A",scope:{notesIsSaving:"="},link:function(n){e.onbeforeunload=function(){return n.notesIsSaving?t("notes","Note is currently saving. Leaving the page will delete all changes!"):null}}}}]),app.directive("notesTimeoutChange",["$timeout",function(t){"use strict";return{restrict:"A",link:function(e,n,o){var i,r=300;n.on("input propertychange",function(){t.cancel(i),i=t(function(){e.$apply(o.notesTimeoutChange)},r)})}}}]),app.directive("notesTooltip",function(){"use strict";return{restrict:"A",link:function(t,e){e.tooltip()}}}),app.filter("noteTitle",function(){"use strict";return function(t){return t=t.split("\n")[0]||"newNote",t.trim().replace(/^#+/g,"")}}),app.factory("is",function(){"use strict";return{loading:!1}}),app.factory("NotesModel",function(){"use strict";var t=function(){this.notes=[],this.notesIds={}};return t.prototype={addAll:function(t){for(var e=0;e<t.length;e+=1)this.add(t[e])},add:function(t){this.updateIfExists(t)},getAll:function(){return this.notes},get:function(t){return this.notesIds[t]},updateIfExists:function(t){var e=this.notesIds[t.id];angular.isDefined(e)?(e.title=t.title,e.modified=t.modified,e.content=t.content):(this.notes.push(t),this.notesIds[t.id]=t)},remove:function(t){for(var e=0;e<this.notes.length;e+=1){var n=this.notes[e];if(n.id===t){this.notes.splice(e,1),delete this.notesIds[t];break}}}},new t}),app.factory("SaveQueue",["$q",function(t){"use strict";var e=function(){this._queue={},this._flushLock=!1};return e.prototype={add:function(t){this._queue[t.id]=t,this._flush()},_flush:function(){var e=Object.keys(this._queue);if(0!==e.length&&!this._flushLock){this._flushLock=!0;for(var n=this,o=[],i=0;i<e.length;i+=1){var r=this._queue[e[i]];o.push(r.put().then(this._noteUpdateRequest.bind(null,r)))}this._queue={},t.all(o).then(function(){n._flushLock=!1,n._flush()})}},_noteUpdateRequest:function(t,e){t.title=e.title,t.modified=e.modified},isSaving:function(){return this._flushLock}},new e}]);
//# sourceMappingURL=app.min.js.map