{"version":3,"sources":["config/app.ts","app.min.js","app/controllers/appcontroller.ts","app/controllers/notecontroller.ts","app/controllers/notescontroller.ts","app/directives/autofocus.ts","app/directives/editor.ts","app/directives/issaving.ts","app/directives/timeoutchange.ts","app/directives/tooltip.ts","app/filters/notetitle.ts","app/services/is.ts","app/services/notesmodel.ts","app/services/savequeue.ts"],"names":[],"mappings":"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","file":"app.min.js","sourcesContent":[null,"/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\nangular.module('Notes', ['restangular', 'ngRoute'])\n    .config(function ($provide, $routeProvider, RestangularProvider, $httpProvider, $windowProvider) {\n    'use strict';\n    // Always send the CSRF token by default\n    $httpProvider.defaults.headers.common.requesttoken = oc_requesttoken;\n    // you have to use $provide inside the config method to provide a globally\n    // shared and injectable object\n    $provide.value('Constants', {\n        saveInterval: 5 * 1000 // miliseconds\n    });\n    // define your routes that that load templates into the ng-view\n    $routeProvider.when('/notes/:noteId', {\n        templateUrl: 'note.html',\n        controller: 'NoteController as Note',\n        resolve: {\n            // $routeParams does not work inside resolve so use $route\n            // note is the name of the argument that will be injected into the\n            // controller\n            /* @ngInject */\n            note: function ($route, $q, is, Restangular) {\n                var deferred = $q.defer();\n                var noteId = $route.current.params.noteId;\n                is.loading = true;\n                Restangular.one('notes', noteId).get().then(function (note) {\n                    is.loading = false;\n                    deferred.resolve(note);\n                }, function () {\n                    is.loading = false;\n                    deferred.reject();\n                });\n                return deferred.promise;\n            }\n        }\n    }).otherwise({\n        redirectTo: '/'\n    });\n    // dynamically set base URL for HTTP requests, assume that there is no other\n    // index.php in the routes\n    var $window = $windowProvider.$get();\n    var url = $window.location.href;\n    var baseUrl = url.split('index.php')[0] + 'index.php/apps/notes';\n    RestangularProvider.setBaseUrl(baseUrl);\n})\n    .run(function ($rootScope, $location, NotesModel) {\n    'use strict';\n    // handle route errors\n    $rootScope.$on('$routeChangeError', function () {\n        var notes = NotesModel.getAll();\n        // route change error should redirect to the latest note if possible\n        if (notes.length > 0) {\n            var sorted = notes.sort(function (a, b) {\n                if (a.modified > b.modified) {\n                    return 1;\n                }\n                else if (a.modified < b.modified) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            });\n            var note = notes[sorted.length - 1];\n            $location.path('/notes/' + note.id);\n        }\n        else {\n            $location.path('/');\n        }\n    });\n});\n/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n'use strict';\nangular.module('Notes').controller('AppController', function ($location, is) {\n    this.is = is;\n    this.init = function (lastViewedNote) {\n        if (lastViewedNote !== 0) {\n            $location.path('/notes/' + lastViewedNote);\n        }\n    };\n});\n/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\nangular.module('Notes').controller('NoteController', function ($routeParams, NotesModel, SaveQueue, note) {\n    'use strict';\n    var _this = this;\n    NotesModel.updateIfExists(note);\n    this.note = NotesModel.get($routeParams.noteId);\n    this.isSaving = function () {\n        return SaveQueue.isSaving();\n    };\n    this.updateTitle = function () {\n        _this.note.title = _this.note.content.split('\\n')[0] ||\n            t('notes', 'New note');\n    };\n    this.save = function () {\n        var note = _this.note;\n        SaveQueue.add(note);\n    };\n});\n/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\nangular.module('Notes').controller('NotesController', function ($routeParams, $location, Restangular, NotesModel) {\n    'use strict';\n    var _this = this;\n    this.route = $routeParams;\n    this.notes = NotesModel.getAll();\n    var notesResource = Restangular.all('notes');\n    // initial request for getting all notes\n    notesResource.getList().then(function (notes) {\n        NotesModel.addAll(notes);\n    });\n    this.create = function () {\n        notesResource.post().then(function (note) {\n            NotesModel.add(note);\n            $location.path('/notes/' + note.id);\n        });\n    };\n    this.delete = function (noteId) {\n        var note = NotesModel.get(noteId);\n        note.remove().then(function () {\n            NotesModel.remove(noteId);\n            _this.$emit('$routeChangeError');\n        });\n    };\n});\n/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\nangular.module('Notes').directive('notesAutofocus', function () {\n    'use strict';\n    return {\n        restrict: 'A',\n        link: function (scope, element) {\n            element.focus();\n        }\n    };\n});\n/**\n * Copyright (c) 2015, Hendrik Leppelsack\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\nangular.module('Notes').directive('editor', ['$timeout', function ($timeout) {\n        'use strict';\n        return {\n            restrict: 'A',\n            scope: {\n                editor: '=',\n                beforeSave: '&'\n            },\n            link: function (scope, element) {\n                var editor = mdEdit(element[0], { change: function (value) {\n                        $timeout(function () {\n                            scope.$apply(function () {\n                                scope.editor.content = value;\n                                scope.beforeSave();\n                            });\n                        });\n                    } });\n                editor.setValue(scope.editor.content);\n            }\n        };\n    }]);\n/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\nangular.module('Notes').directive('notesIsSaving', function ($window) {\n    'use strict';\n    return {\n        restrict: 'A',\n        scope: {\n            'notesIsSaving': '='\n        },\n        link: function (scope) {\n            $window.onbeforeunload = function () {\n                if (scope.notesIsSaving) {\n                    return t('notes', 'Note is currently saving. Leaving ' +\n                        'the page will delete all changes!');\n                }\n                else {\n                    return null;\n                }\n            };\n        }\n    };\n});\n/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\nangular.module('Notes').directive('notesTimeoutChange', function ($timeout) {\n    'use strict';\n    return {\n        restrict: 'A',\n        link: function (scope, element, attributes) {\n            var interval = 300; // 300 miliseconds timeout after typing\n            var timeout;\n            element.on('input propertychange', function () {\n                $timeout.cancel(timeout);\n                timeout = $timeout(function () {\n                    scope.$apply(attributes.notesTimeoutChange);\n                }, interval);\n            });\n        }\n    };\n});\n/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\nangular.module('Notes').directive('notesTooltip', function () {\n    'use strict';\n    return {\n        restrict: 'A',\n        link: function (scope, element) {\n            element.tooltip();\n        }\n    };\n});\n/**\n * Copyright (c) 2015, Hendrik Leppelsack\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\nangular.module('Notes').filter('noteTitle', function () {\n    'use strict';\n    return function (value) {\n        value = value.split('\\n')[0] || 'newNote';\n        return value.trim().replace(/^#+/g, '');\n    };\n});\n/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\n'use strict';\nangular.module('Notes').factory('is', function () {\n    return {\n        loading: false\n    };\n});\n/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\nangular.module('Notes').factory('NotesModel', function () {\n    'use strict';\n    var NotesModel = function () {\n        this.notes = [];\n        this.notesIds = {};\n    };\n    NotesModel.prototype = {\n        addAll: function (notes) {\n            for (var i = 0; i < notes.length; i += 1) {\n                this.add(notes[i]);\n            }\n        },\n        add: function (note) {\n            this.updateIfExists(note);\n        },\n        getAll: function () {\n            return this.notes;\n        },\n        get: function (id) {\n            return this.notesIds[id];\n        },\n        updateIfExists: function (updated) {\n            var note = this.notesIds[updated.id];\n            if (angular.isDefined(note)) {\n                note.title = updated.title;\n                note.modified = updated.modified;\n                note.content = updated.content;\n            }\n            else {\n                this.notes.push(updated);\n                this.notesIds[updated.id] = updated;\n            }\n        },\n        remove: function (id) {\n            for (var i = 0; i < this.notes.length; i += 1) {\n                var note = this.notes[i];\n                if (note.id === id) {\n                    this.notes.splice(i, 1);\n                    delete this.notesIds[id];\n                    break;\n                }\n            }\n        }\n    };\n    return new NotesModel();\n});\n/**\n * Copyright (c) 2013, Bernhard Posselt <dev@bernhard-posselt.com>\n * This file is licensed under the Affero General Public License version 3 or\n * later.\n * See the COPYING file.\n */\nangular.module('Notes').factory('SaveQueue', function ($q) {\n    'use strict';\n    var SaveQueue = function () {\n        this._queue = {};\n        this._flushLock = false;\n    };\n    SaveQueue.prototype = {\n        add: function (note) {\n            this._queue[note.id] = note;\n            this._flush();\n        },\n        _flush: function () {\n            // if there are no changes dont execute the requests\n            var keys = Object.keys(this._queue);\n            if (keys.length === 0 || this._flushLock) {\n                return;\n            }\n            else {\n                this._flushLock = true;\n            }\n            var self = this;\n            var requests = [];\n            // iterate over updated objects and run an update request for\n            // each one of them\n            for (var i = 0; i < keys.length; i += 1) {\n                var note = this._queue[keys[i]];\n                // if the update finished, update the modified and title\n                // attributes on the note\n                requests.push(note.put().then(this._noteUpdateRequest.bind(null, note)));\n            }\n            this._queue = {};\n            // if all update requests are completed, run the flush\n            // again to update the next batch of queued notes\n            $q.all(requests).then(function () {\n                self._flushLock = false;\n                self._flush();\n            });\n        },\n        _noteUpdateRequest: function (note, response) {\n            note.title = response.title;\n            note.modified = response.modified;\n        },\n        isSaving: function () {\n            return this._flushLock;\n        }\n    };\n    return new SaveQueue();\n});\n",null,null,null,null,null,null,null,null,null,null,null,null],"sourceRoot":"/source/"}